!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/0+git~c77db554/
MessageParts	common/src/lib.rs	/^pub struct MessageParts {$/;"	s
dict	common/src/lib.rs	/^    pub dict: std::collections::HashMap<String, i32>,$/;"	m	struct:MessageParts
int1	common/src/lib.rs	/^    pub int1: u64,$/;"	m	struct:MessageParts
int2	common/src/lib.rs	/^    pub int2: u64,$/;"	m	struct:MessageParts
int_array	common/src/lib.rs	/^    pub int_array: Vec<u64>,$/;"	m	struct:MessageParts
interface	common/src/lib.rs	/^    pub interface: String,$/;"	m	struct:MessageParts
make_big_array_message	common/src/lib.rs	/^fn make_big_array_message() -> MessageParts {$/;"	f
make_big_string_array_message	common/src/lib.rs	/^fn make_big_string_array_message() -> MessageParts {$/;"	f
make_mixed_message	common/src/lib.rs	/^fn make_mixed_message() -> MessageParts {$/;"	f
member	common/src/lib.rs	/^    pub member: String,$/;"	m	struct:MessageParts
object	common/src/lib.rs	/^    pub object: String,$/;"	m	struct:MessageParts
repeat	common/src/lib.rs	/^    pub repeat: usize,$/;"	m	struct:MessageParts
run	common/src/lib.rs	/^pub fn run<F, V>(mut f: F)$/;"	f
string1	common/src/lib.rs	/^    pub string1: String,$/;"	m	struct:MessageParts
string2	common/src/lib.rs	/^    pub string2: String,$/;"	m	struct:MessageParts
string_array	common/src/lib.rs	/^    pub string_array: Vec<String>,$/;"	m	struct:MessageParts
